<!DOCTYPE html PUBLIC "-//W3C//DTD XHTML 1.0 Transitional//EN"
   "http://www.w3.org/TR/xhtml1/DTD/xhtml1-transitional.dtd">
<!-- Generated by Pod::Advent 0.21 (Pod::Simple 3.07, Perl::Tidy 20090616) on 2010-12-12 22:13:41 -->
<html xmlns="http://www.w3.org/1999/xhtml">
<head>
<title>2010 Perl Advent Calendar: ã¡ãªã¼ VAXmas</title>
<link rel="stylesheet" href="../style.css" type="text/css" />
<link rel="alternate" type="text/plain" href="mod12.pod" />
</head>
<body>
<h1><a href="../">Perl Advent Calendar 2010-12</a>-12</h1>
<h2 align="center">ã¡ãªã¼ VAXmas</h2>
<h3 align="center">by Jerrad Pierce</h3>
<p>After a few hundred years one's memory starts to go, and it's easy to forget the ins and outs of your favorite language, especially if one tends to be preoccupied with whether or not little Suzy is a sleep and just how good Daryl has been this year. <tt><a href="http://search.cpan.org/perldoc?App::perlzonji" title="App::perlzonji">perlzonji</a></tt> is an extensible wrapper around <tt><span class="w">perldoc</span></tt> (clones). Its plugins maps keywords entered on the command line into the appropriate manual page for you to reference, so although you might not remember where <span style="font-style: italic">__WARN__</span> lives, <tt><span title="App::perlzonji">perlzonji</span></tt> can direct you to <tt>perlvar</tt></p>
<pre><span class="c">% perldoc __DATA__
No documentation found for "__DATA__".
% perlzonji __DATA__
SelfLoader(3)            User Contributed Perl Documentation           SelfLoader(3)

NAME
       SelfLoader - load functions only on demand

SYNOPSIS
           package FOOBAR;
           use SelfLoader;

           ... (initializing code)

           __DATA__
           sub {....</span></pre>
<p>Obviously some of the mappings aren't quite what one would expect, and because it uses perldoc to do the heavy lifting it is not able to mimic the <span style="font-weight: bold">-f</span> behavior of only showing the relevant part of the documentation for the supplied keyword, or jumping to it. However, the plugin structure is simple enough:</p>
<pre>
<span class="k">use</span> <span class="n">5.008</span><span class="sc">;</span>
<span class="k">use</span> <span class="w">strict</span><span class="sc">;</span>
<span class="k">use</span> <span class="w">warnings</span><span class="sc">;</span>

<a name="package-App::perlzonji::Plugin::VMS"></a><span class="k">package </span><span class="i">App::perlzonji::Plugin::VMS</span><span class="sc">;</span>
<span class="i">$VERSION</span> = <span class="n">12.25</span><span class="sc">;</span>

<span class="c"># ABSTRACT: Plugin for labels</span>
<span class="k">use</span> <span class="w">App::perlzonji</span><span class="sc">;</span>
<span class="w">App::perlzonji</span><span class="w">-&gt;add_trigger</span><span class="s">(</span>
    <span class="q">&#39;matches.add&#39;</span> <span class="cm">=&gt;</span> <span class="k">sub</span> <span class="s">{</span>
        <span class="k">my</span> <span class="s">(</span><span class="i">$class</span><span class="cm">,</span> <span class="i">$word</span><span class="cm">,</span> <span class="i">$matches</span><span class="s">)</span> = <span class="i">@_</span><span class="sc">;</span>

	<span class="c">#Create $RE here for funny functions on VMS</span>

        <span class="k">if</span> <span class="s">(</span><span class="i">$word</span> =~ <span class="q">/^$RE$/</span><span class="s">)</span> <span class="s">{</span> <span class="k">push</span> <span class="i">@$matches</span><span class="cm">,</span> <span class="q">&#39;perlvms&#39;</span> <span class="s">}</span>
    <span class="s">}</span>
<span class="s">)</span> <span class="k">if</span> <span class="i">$^O</span> <span class="k">eq</span> <span class="q">&#39;VMS&#39;</span><span class="sc">;</span>
<span class="n">1</span><span class="sc">;</span>
</pre>

<div style="float: right; font-size: 10pt"><a href="mod12.pod">View Source (POD)</a></div><br />
</body>
</html>
